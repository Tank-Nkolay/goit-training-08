{"mappings":"AAkLA,SAASA,EAASC,GAChB,MAAMC,EAAS,CACbC,WAAY,WACJC,KAAF,OACFC,MAAG,UAGT,OAAO,IAAIC,SAAQC,GAAWC,YAAW,IAAMD,EAAQL,EAAOD,KAAQ,QAGxEQ,iBACEC,QAAQC,KAAK,iBAEb,MAAMN,EAAQL,EAAS,SACjBI,EAAOJ,EAAS,QAChBY,EAAQZ,EAAS,cAEjBE,QAAeI,QAAQO,IAAI,CAACR,EAAOD,EAAMQ,IAC/CF,QAAQI,IAAIZ,GAEZQ,QAAQK,QAAQ,iBAGlBC","sources":["src/js/01-color-switcher.js"],"sourcesContent":["// -----------------------------------------------------------------------------\n// пример ПОКЕМОН\n// -----------------------------------------------------------------------------\n// let qqq = document.querySelector('.qqq');\n// const www = document.querySelector('.form');\n// let onForm;\n// let x;\n\n// www.addEventListener('submit', onSearch);\n\n// function onSearch(e) {\n//   e.preventDefault();\n\n//   qqq.innerHTML = '';\n\n//   const form = e.currentTarget;\n//   onForm = form.elements.query.value;\n\n//   return fetch(`https://pokeapi.co/api/v2/pokemon/${onForm}`)\n//     .then(response => {\n//       return response.json();\n//     })\n//     .then(pokemon => {\n//       x = `\n//     <p>Имя: ${pokemon.name} </p>\n//     <img src = \"${pokemon.sprites.front_default}\" alt = \"${pokemon.name}\" width=\"200\" height=\"200\">\n//     <p>Вес: ${pokemon.weight} </p>\n//     <p>Рост: ${pokemon.height} </p>`;\n//       qqq.insertAdjacentHTML('beforeend', x);\n//       console.log(pokemon);\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     })\n//     .finally(() => www.reset());\n// }\n\n// -----------------------------------------------------------------------------\n// пример РАБОТА С МАСИВОМ БЭКЕНД\n// -----------------------------------------------------------------------------\n\n// ЧИТАЛКА ============================================\n\n// const BASE_URL = 'http://localhost:3000';\n\n// function fetchBooks() {\n//   fetch(`${BASE_URL}/books`)\n//     .then(res => res.json())\n//     .then(console.log);\n// }\n\n// fetchBooks();\n\n// function fetchBookById(bookId) {\n//   fetch(`${BASE_URL}/books/${bookId}`)\n//     .then(res => res.json())\n//     .then(console.log);\n// }\n\n// fetchBookById(5);\n// fetchBookById(7);\n\n// ДОБАВЛЯЕМ ============================================\n\n// const newBook = {\n//   title: 'Тестовая книга-2',\n//   author: 'Неизвестный автор',\n//   genres: ['фантастика'],\n//   rating: 8.0,\n// };\n\n// function addBook(book) {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(book),\n//   };\n\n//   return fetch(`${BASE_URL}/books`, options)\n//     .then(res => res.json())\n//     .then(console.log);\n// }\n\n// addBook({\n//   title: 'Тестовая книга-3',\n//   author: 'Известный автор',\n//   genres: ['приключения'],\n//   rating: 8.6,\n// }).then(renderBook).catch(error => console.log(error));\n\n// function renderBook(book) {\n//   console.log('Пришел ответ от БЭКЕНДА можно идти дальше');\n//   console.log(book);\n// }\n\n// ПЕРЕЗАПИСЬ ============================================\n\n// const BASE_URL = 'http://localhost:3000';\n\n// const options = {\n//   method: 'PATCH',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   body: JSON.stringify({ title: 'Новая книга' }),\n// };\n\n// fetch(`${BASE_URL}/books/11`, options)\n//   .then(res => res.json())\n//   .then(console.log);\n\n// улучшаем\n// function updateBookById(update, bookId) {\n//   const options = {\n//     method: 'PATCH',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(update),\n//   };\n\n//   return fetch(`${BASE_URL}/books/${bookId}`, options)\n//     .then(res => res.json())\n//     .then(console.log);\n// }\n\n// updateBookById({ title: 'Страшная книга' }, 10);\n\n// масив\n// function fetchBooks() {\n//   fetch(`${BASE_URL}/books`)\n//     .then(res => res.json())\n//     .then(console.log);\n// }\n// fetchBooks();\n\n// УДАЛЕНИЕ ============================================\n\n// const BASE_URL = 'http://localhost:3000';\n\n// function removeBook(bookId) {\n//   const options = {\n//     method: 'DELETE',\n//   };\n\n//   return fetch(`${BASE_URL}/books/${bookId}`, options)\n//     .then(res => res.json())\n//     .then(console.log)\n//     .catch(error => console.log(error));\n// }\n\n// removeBook(11);\n\n// масив\n// function fetchBooks() {\n//   fetch(`${BASE_URL}/books`)\n//     .then(res => res.json())\n//     .then(console.log);\n// }\n// fetchBooks();\n\n// -----------------------------------------------------------------------------\n// пример TRY CATCH\n// -----------------------------------------------------------------------------\n\n// try {\n//   console.log('внутри try');\n// } catch (error) {\n//   console.log('Ошибка!');\n// }\n// console.log('После try ... catch');\n\n// -----------------------------------------------------------------------------\n// пример АССИНХРОННАЯ ФУНКЦИЯ а паралельным вызовом\n// -----------------------------------------------------------------------------\n\nfunction getFruit(name) {\n  const fruits = {\n    strawberry: 'Клубника',\n    kiwi: 'Киви',\n    apple: 'Яблоко',\n  };\n\n  return new Promise(resolve => setTimeout(() => resolve(fruits[name]), 500));\n}\n\nasync function aMakeSmoothie() {\n  console.time('aMakeSmoothie');\n\n  const apple = getFruit('apple');\n  const kiwi = getFruit('kiwi');\n  const barry = getFruit('strawberry');\n\n  const fruits = await Promise.all([apple, kiwi, barry]);\n  console.log(fruits);\n\n  console.timeEnd('aMakeSmoothie');\n}\n\naMakeSmoothie();\n"],"names":["$f00cafd61c2e1654$var$getFruit","name","fruits","strawberry","kiwi","apple","Promise","resolve","setTimeout","async","console","time","barry","all","log","timeEnd","$f00cafd61c2e1654$var$aMakeSmoothie"],"version":3,"file":"01-color-switcher.20a46ba4.js.map"}